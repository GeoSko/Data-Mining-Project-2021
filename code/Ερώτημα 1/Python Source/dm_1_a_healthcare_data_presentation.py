# -*- coding: utf-8 -*-
"""DM_1_A_healthcare_data_presentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_hS2EOZka2TSvH1iK-XLqajMTtRo0X4G
"""

#Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import platform

# Versions of libraries
import matplotlib
print(f'Python:{platform.python_version()}\nPandas:{pd.__version__}\nMatplotlib:{matplotlib.__version__}\nSeaborn:{sns.__version__}')

df = pd.read_csv('drive/MyDrive/DataMining/healthcare-dataset-stroke-data/healthcare-dataset-stroke-data.csv')

df.shape

df.head()

df.dtypes

df.describe()

# gender
df['gender'].value_counts()

sns.countplot(x = 'gender', data= df)

# hypertension
df['hypertension'].value_counts()

sns.countplot(x = 'hypertension', data= df)

# heart_disease
df['heart_disease'].value_counts()

sns.countplot(x = 'heart_disease', data= df)

# ever_married
df['ever_married'].value_counts()

sns.countplot(x = 'ever_married', data= df)

# work_type
df['work_type'].value_counts()

sns.countplot(x = 'work_type', data= df)

#Residence_type
df['Residence_type'].value_counts()

sns.countplot(x = 'Residence_type', data= df)

#smoking_status
df['smoking_status'].value_counts()

sns.countplot(x = 'smoking_status', data= df)

# stroke
df['stroke'].value_counts()

sns.countplot(x = 'stroke', data= df)

# age
sns.displot(df['age'], kde=True)

age_min = df['age'].min()
age_max = df['age'].max()
age_mean = df['age'].mean()
age_median = df['age'].median()
age_std = df['age'].std()
age_missing_values = df['age'].isnull().sum()
print("""Age min: {0}\nAge max: {1}\nAge mean: {2}\nAge median:{3}\nAge std: {4}\nAge missing values: {5}""".format(age_min, age_max, age_mean, age_median, age_std,age_missing_values))

# avg_glucose_level
sns.displot(df['avg_glucose_level'], kde=True)

glucose_avg_min = df['avg_glucose_level'].min()
glucose_avg_max = df['avg_glucose_level'].max()
glucose_avg_mean = df['avg_glucose_level'].mean()
glucose_avg_median = df['avg_glucose_level'].median()
glucose_avg_std = df['avg_glucose_level'].std()
glucose_avg_missing_values = df['avg_glucose_level'].isnull().sum()
print("""Average Glucoge Level min: {0}\nAverage Glucoge Level max: {1}\nAverage Glucoge Level mean: {2}\nAverage Glucoge Level median: {3}
Average Glucoge Level std: {4}\nAverage Glucoge Level missing values: {5}""".format(glucose_avg_min, glucose_avg_max, glucose_avg_mean, glucose_avg_median, glucose_avg_std, glucose_avg_missing_values))

# bmi
sns.displot(df['bmi'], kde=True)

bmi_min = df['bmi'].min()
bmi_max = df['bmi'].max()
bmi_mean = df['bmi'].mean()
bmi_median = df['bmi'].median()
bmi_std = df['bmi'].std()
bmi_missing_values = df['bmi'].isnull().sum()
print("""Average BMI Level min: {0}\nAverage BMI Level max: {1}\nAverage BMI Level mean: {2}\nAverage BMI Level median: {3}
Average BMI Level std: {4}\nAverage BMI missing values: {5}""".format(bmi_min, bmi_max, bmi_mean, bmi_median, bmi_std, bmi_missing_values))

df['bmi'].isna().sum()

# id
id_min = df['id'].min()
id_max = df['id'].max()
id_unique = df["id"].is_unique
print("""Id min: {0}\nId max: {1}\nId unique: {2}""".format(id_min, id_max, id_unique))

df.isna().sum()

corr_matrix = df.corr()
corr_matrix

sns.heatmap(corr_matrix[['stroke']], annot=True)

df_dummies = pd.get_dummies(data=df.drop(labels="id", axis=1), drop_first=True)
df_dummies

corr_dummies_matrix = df_dummies.corr()
corr_dummies_matrix

corr_dummies_stroke = corr_dummies_matrix[['stroke']].sort_values(by=['stroke'], ascending= False)
corr_dummies_stroke

# Plot correlations
sns.heatmap(corr_dummies_stroke, annot=True)

sns.scatterplot(data=df, x="age", y="avg_glucose_level", hue="stroke")

